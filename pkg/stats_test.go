// Code generated by astisrt using internal/cmd/generate/stats. DO NOT EDIT.
package astisrt

import (
	"testing"

	"github.com/stretchr/testify/require"
)

func TestStats(t *testing.T) {
	s := Stats{}
	s.c.msTimeStamp = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.MsTimeStamp())
	s.c.pktSentTotal = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.PktSentTotal())
	s.c.pktRecvTotal = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.PktRecvTotal())
	s.c.pktSndLossTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSndLossTotal())
	s.c.pktRcvLossTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvLossTotal())
	s.c.pktRetransTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRetransTotal())
	s.c.pktSentACKTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSentACKTotal())
	s.c.pktRecvACKTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRecvACKTotal())
	s.c.pktSentNAKTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSentNAKTotal())
	s.c.pktRecvNAKTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRecvNAKTotal())
	s.c.usSndDurationTotal = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.UsSndDurationTotal())
	s.c.pktSndDropTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSndDropTotal())
	s.c.pktRcvDropTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvDropTotal())
	s.c.pktRcvUndecryptTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvUndecryptTotal())
	s.c.byteSentTotal = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteSentTotal())
	s.c.byteRecvTotal = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRecvTotal())
	s.c.byteRcvLossTotal = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRcvLossTotal())
	s.c.byteRetransTotal = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRetransTotal())
	s.c.byteSndDropTotal = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteSndDropTotal())
	s.c.byteRcvDropTotal = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRcvDropTotal())
	s.c.byteRcvUndecryptTotal = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRcvUndecryptTotal())
	s.c.pktSent = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.PktSent())
	s.c.pktRecv = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.PktRecv())
	s.c.pktSndLoss = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSndLoss())
	s.c.pktRcvLoss = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvLoss())
	s.c.pktRetrans = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRetrans())
	s.c.pktRcvRetrans = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvRetrans())
	s.c.pktSentACK = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSentACK())
	s.c.pktRecvACK = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRecvACK())
	s.c.pktSentNAK = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSentNAK())
	s.c.pktRecvNAK = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRecvNAK())
	s.c.mbpsSendRate = _Ctype_double(float64(42))
	require.Equal(t, float64(42), s.MbpsSendRate())
	s.c.mbpsRecvRate = _Ctype_double(float64(42))
	require.Equal(t, float64(42), s.MbpsRecvRate())
	s.c.usSndDuration = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.UsSndDuration())
	s.c.pktReorderDistance = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktReorderDistance())
	s.c.pktRcvAvgBelatedTime = _Ctype_double(float64(42))
	require.Equal(t, float64(42), s.PktRcvAvgBelatedTime())
	s.c.pktRcvBelated = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.PktRcvBelated())
	s.c.pktSndDrop = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSndDrop())
	s.c.pktRcvDrop = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvDrop())
	s.c.pktRcvUndecrypt = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvUndecrypt())
	s.c.byteSent = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteSent())
	s.c.byteRecv = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRecv())
	s.c.byteRcvLoss = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRcvLoss())
	s.c.byteRetrans = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRetrans())
	s.c.byteSndDrop = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteSndDrop())
	s.c.byteRcvDrop = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRcvDrop())
	s.c.byteRcvUndecrypt = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRcvUndecrypt())
	s.c.usPktSndPeriod = _Ctype_double(float64(42))
	require.Equal(t, float64(42), s.UsPktSndPeriod())
	s.c.pktFlowWindow = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktFlowWindow())
	s.c.pktCongestionWindow = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktCongestionWindow())
	s.c.pktFlightSize = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktFlightSize())
	s.c.msRTT = _Ctype_double(float64(42))
	require.Equal(t, float64(42), s.MsRTT())
	s.c.mbpsBandwidth = _Ctype_double(float64(42))
	require.Equal(t, float64(42), s.MbpsBandwidth())
	s.c.byteAvailSndBuf = _Ctype_int(int(42))
	require.Equal(t, int(42), s.ByteAvailSndBuf())
	s.c.byteAvailRcvBuf = _Ctype_int(int(42))
	require.Equal(t, int(42), s.ByteAvailRcvBuf())
	s.c.mbpsMaxBW = _Ctype_double(float64(42))
	require.Equal(t, float64(42), s.MbpsMaxBW())
	s.c.byteMSS = _Ctype_int(int(42))
	require.Equal(t, int(42), s.ByteMSS())
	s.c.pktSndBuf = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSndBuf())
	s.c.byteSndBuf = _Ctype_int(int(42))
	require.Equal(t, int(42), s.ByteSndBuf())
	s.c.msSndBuf = _Ctype_int(int(42))
	require.Equal(t, int(42), s.MsSndBuf())
	s.c.msSndTsbPdDelay = _Ctype_int(int(42))
	require.Equal(t, int(42), s.MsSndTsbPdDelay())
	s.c.pktRcvBuf = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvBuf())
	s.c.byteRcvBuf = _Ctype_int(int(42))
	require.Equal(t, int(42), s.ByteRcvBuf())
	s.c.msRcvBuf = _Ctype_int(int(42))
	require.Equal(t, int(42), s.MsRcvBuf())
	s.c.msRcvTsbPdDelay = _Ctype_int(int(42))
	require.Equal(t, int(42), s.MsRcvTsbPdDelay())
	s.c.pktSndFilterExtraTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSndFilterExtraTotal())
	s.c.pktRcvFilterExtraTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvFilterExtraTotal())
	s.c.pktRcvFilterSupplyTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvFilterSupplyTotal())
	s.c.pktRcvFilterLossTotal = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvFilterLossTotal())
	s.c.pktSndFilterExtra = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktSndFilterExtra())
	s.c.pktRcvFilterExtra = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvFilterExtra())
	s.c.pktRcvFilterSupply = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvFilterSupply())
	s.c.pktRcvFilterLoss = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktRcvFilterLoss())
	s.c.pktReorderTolerance = _Ctype_int(int(42))
	require.Equal(t, int(42), s.PktReorderTolerance())
	s.c.pktSentUniqueTotal = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.PktSentUniqueTotal())
	s.c.pktRecvUniqueTotal = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.PktRecvUniqueTotal())
	s.c.byteSentUniqueTotal = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteSentUniqueTotal())
	s.c.byteRecvUniqueTotal = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRecvUniqueTotal())
	s.c.pktSentUnique = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.PktSentUnique())
	s.c.pktRecvUnique = _Ctype_int64_t(int64(42))
	require.Equal(t, int64(42), s.PktRecvUnique())
	s.c.byteSentUnique = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteSentUnique())
	s.c.byteRecvUnique = _Ctype_uint64_t(uint64(42))
	require.Equal(t, uint64(42), s.ByteRecvUnique())
	
}